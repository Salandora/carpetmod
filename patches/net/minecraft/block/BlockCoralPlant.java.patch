--- a/net/minecraft/block/BlockCoralPlant.java
+++ b/net/minecraft/block/BlockCoralPlant.java
@@ -1,17 +1,27 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
+import carpet.CarpetSettings;
+import net.minecraft.block.material.MaterialColor;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.fluid.FluidState;
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Fluids;
+import net.minecraft.tags.BlockTags;
+import net.minecraft.tags.FluidTags;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.shapes.VoxelShape;
 import net.minecraft.world.IBlockReader;
 import net.minecraft.world.IWorld;
 import net.minecraft.world.World;
+import net.minecraft.world.gen.feature.CoralClawFeature;
+import net.minecraft.world.gen.feature.CoralFeature;
+import net.minecraft.world.gen.feature.CoralMushroomFeature;
+import net.minecraft.world.gen.feature.CoralTreeFeature;
 
-public class BlockCoralPlant extends BlockCoralPlantBase
+public class BlockCoralPlant extends BlockCoralPlantBase implements IGrowable
 {
     private final Block field_212562_c;
     protected static final VoxelShape SHAPE = Block.makeCuboidShape(2.0D, 0.0D, 2.0D, 14.0D, 15.0D, 14.0D);
@@ -54,6 +64,45 @@
         }
     }
 
+    public boolean canGrow(IBlockReader worldIn, BlockPos pos, IBlockState state, boolean isClient)
+    {
+        return CarpetSettings.renewableCoral && state.get(field_212560_b) && worldIn.getFluidState(pos.up()).isTagged(FluidTags.WATER);
+    }
+
+    public boolean canUseBonemeal(World worldIn, Random rand, BlockPos pos, IBlockState state)
+    {
+        return (double)worldIn.rand.nextFloat() < 0.15D;
+    }
+
+    public void grow(World worldIn, Random random, BlockPos pos, IBlockState blockUnder)
+    {
+        CoralFeature coral;
+        int variant = random.nextInt(3);
+        if (variant == 0)
+            coral = new CoralClawFeature();
+        else if (variant == 1)
+            coral = new CoralTreeFeature();
+        else
+            coral = new CoralMushroomFeature();
+
+        MaterialColor color = blockUnder.getMapColor(worldIn, pos);
+        IBlockState proper_block = blockUnder;
+        for (Block block: BlockTags.CORAL_BLOCKS.getAllElements())
+        {
+            proper_block = block.getDefaultState();
+            if (proper_block.getMapColor(worldIn,pos) == color)
+            {
+                break;
+            }
+        }
+        worldIn.setBlockState(pos, Blocks.WATER.getDefaultState(), 4);
+
+        if (!coral.growSpecific(worldIn, random, pos, proper_block))
+        {
+            worldIn.setBlockState(pos, blockUnder, 4);
+        }
+    }
+
     public VoxelShape getShape(IBlockState state, IBlockReader worldIn, BlockPos pos)
     {
         return SHAPE;
