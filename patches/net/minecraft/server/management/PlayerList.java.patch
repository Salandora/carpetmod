--- a/net/minecraft/server/management/PlayerList.java
+++ b/net/minecraft/server/management/PlayerList.java
@@ -1,5 +1,8 @@
 package net.minecraft.server.management;
 
+import carpet.CarpetSettings;
+import carpet.patches.EntityPlayerMPFake;
+import carpet.patches.NetHandlerPlayServerFake;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -41,12 +44,14 @@
 import net.minecraft.network.play.server.SPacketTimeUpdate;
 import net.minecraft.network.play.server.SPacketUpdateRecipes;
 import net.minecraft.network.play.server.SPacketWorldBorder;
+import net.minecraft.network.rcon.RConThreadMain;
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.scoreboard.ScoreObjective;
 import net.minecraft.scoreboard.ScorePlayerTeam;
 import net.minecraft.scoreboard.ServerScoreboard;
 import net.minecraft.scoreboard.Team;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.stats.StatList;
 import net.minecraft.stats.StatisticsManagerServer;
 import net.minecraft.util.math.BlockPos;
@@ -123,7 +128,9 @@
         WorldServer worldserver = this.server.getWorld(playerIn.dimension);
         WorldInfo worldinfo = worldserver.getWorldInfo();
         this.setPlayerGameTypeBasedOnOther(playerIn, (EntityPlayerMP)null, worldserver);
-        NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.server, netManager, playerIn);
+        //custom manager for fake players [CM]
+        //NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.server, netManager, playerIn);
+        NetHandlerPlayServer nethandlerplayserver = (playerIn instanceof EntityPlayerMPFake)?(new NetHandlerPlayServerFake(this.server, netManager, playerIn)):(new NetHandlerPlayServer(this.server, netManager, playerIn));
         nethandlerplayserver.sendPacket(new SPacketJoinGame(playerIn.getEntityId(), playerIn.interactionManager.getGameType(), worldinfo.isHardcore(), worldserver.dimension.getType(), worldserver.getDifficulty(), this.getMaxPlayers(), worldinfo.getTerrainType(), worldserver.getGameRules().getBoolean("reducedDebugInfo")));
         nethandlerplayserver.sendPacket(new SPacketCustomPayload(SPacketCustomPayload.BRAND, (new PacketBuffer(Unpooled.buffer())).writeString(this.getServer().getServerModName())));
         nethandlerplayserver.sendPacket(new SPacketServerDifficulty(worldinfo.getDifficulty(), worldinfo.isDifficultyLocked()));
@@ -146,6 +153,13 @@
         {
             itextcomponent = new TextComponentTranslation("multiplayer.player.joined.renamed", playerIn.getDisplayName(), s);
         }
+    
+        if (CarpetSettings.b_rconChatBridge)
+        {
+            RConThreadMain rconThread = ((DedicatedServer) this.server).rconThread;
+            if (rconThread != null)
+                rconThread.sendMessageCarpetChatBridge(itextcomponent.getUnformattedComponentText());
+        }
 
         this.sendMessage(itextcomponent.applyTextStyle(TextFormatting.YELLOW));
         this.playerLoggedIn(playerIn);
@@ -306,6 +320,10 @@
         {
             nbttagcompound1 = this.playerDataManager.readPlayerData(playerIn);
         }
+        if (playerIn instanceof EntityPlayerMPFake)
+        {
+            ((EntityPlayerMPFake) playerIn).fixStartingPosition.run();
+        }
 
         return nbttagcompound1;
     }
@@ -454,6 +472,12 @@
 
         for (EntityPlayerMP entityplayermp1 : list)
         {
+            //CM disconnect shadowed players
+            if(entityplayermp1 instanceof EntityPlayerMPFake)
+            {
+                entityplayermp1.onKillCommand();
+                continue;
+            }
             entityplayermp1.connection.disconnect(new TextComponentTranslation("multiplayer.disconnect.duplicate_login"));
         }
 
