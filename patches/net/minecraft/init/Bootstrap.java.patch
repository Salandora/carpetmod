--- a/net/minecraft/init/Bootstrap.java
+++ b/net/minecraft/init/Bootstrap.java
@@ -1,55 +1,24 @@
 package net.minecraft.init;
 
-import java.io.PrintStream;
-import java.util.Random;
-import java.util.function.Function;
-import net.minecraft.block.Block;
-import net.minecraft.block.BlockCarvedPumpkin;
-import net.minecraft.block.BlockDispenser;
-import net.minecraft.block.BlockFire;
-import net.minecraft.block.BlockShulkerBox;
-import net.minecraft.block.BlockSkull;
-import net.minecraft.block.BlockSkullWither;
-import net.minecraft.block.BlockTNT;
-import net.minecraft.block.IBucketPickupHandler;
+import carpet.CarpetSettings;
+import carpet.helpers.BlockRotator;
+import net.minecraft.block.*;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.command.arguments.ArgumentTypes;
 import net.minecraft.command.arguments.EntityOptions;
-import net.minecraft.dispenser.BehaviorDefaultDispenseItem;
-import net.minecraft.dispenser.BehaviorProjectileDispense;
-import net.minecraft.dispenser.IBehaviorDispenseItem;
-import net.minecraft.dispenser.IBlockSource;
-import net.minecraft.dispenser.IPosition;
+import net.minecraft.dispenser.*;
 import net.minecraft.enchantment.Enchantment;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.IProjectile;
-import net.minecraft.entity.item.EntityBoat;
-import net.minecraft.entity.item.EntityExpBottle;
-import net.minecraft.entity.item.EntityFireworkRocket;
-import net.minecraft.entity.item.EntityTNTPrimed;
-import net.minecraft.entity.item.PaintingType;
+import net.minecraft.entity.item.*;
+import net.minecraft.entity.passive.EntitySheep;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
-import net.minecraft.entity.projectile.EntityArrow;
-import net.minecraft.entity.projectile.EntityEgg;
-import net.minecraft.entity.projectile.EntityPotion;
-import net.minecraft.entity.projectile.EntitySmallFireball;
-import net.minecraft.entity.projectile.EntitySnowball;
-import net.minecraft.entity.projectile.EntitySpectralArrow;
-import net.minecraft.entity.projectile.EntityTippedArrow;
+import net.minecraft.entity.projectile.*;
 import net.minecraft.fluid.FlowingFluid;
 import net.minecraft.fluid.Fluid;
-import net.minecraft.item.BlockItemUseContext;
-import net.minecraft.item.EnumDyeColor;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemArmor;
-import net.minecraft.item.ItemBlock;
-import net.minecraft.item.ItemBoneMeal;
-import net.minecraft.item.ItemBucket;
-import net.minecraft.item.ItemFlintAndSteel;
-import net.minecraft.item.ItemSpawnEgg;
-import net.minecraft.item.ItemStack;
+import net.minecraft.item.*;
 import net.minecraft.particles.ParticleType;
 import net.minecraft.potion.Potion;
 import net.minecraft.potion.PotionBrewing;
@@ -61,12 +30,8 @@
 import net.minecraft.tileentity.TileEntityDispenser;
 import net.minecraft.tileentity.TileEntitySkull;
 import net.minecraft.tileentity.TileEntityType;
-import net.minecraft.util.EnumActionResult;
-import net.minecraft.util.EnumFacing;
-import net.minecraft.util.LoggingPrintStream;
-import net.minecraft.util.SharedConstants;
-import net.minecraft.util.SoundCategory;
-import net.minecraft.util.SoundEvent;
+import net.minecraft.util.*;
+import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.util.registry.IRegistry;
@@ -82,6 +47,12 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import java.io.PrintStream;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+import java.util.function.Function;
+
 public class Bootstrap
 {
     public static final PrintStream SYSOUT = System.out;
@@ -476,6 +447,69 @@
         });
         BlockDispenser.registerDispenseBehavior(Blocks.SHULKER_BOX.asItem(), new Bootstrap.BehaviorDispenseShulkerBox());
 
+        // [CM] Block rotation by Xcom
+        BlockDispenser.registerDispenseBehavior(Blocks.CACTUS.asItem(), new Bootstrap.BehaviorDispenseOptional()
+        {
+            private final BehaviorDefaultDispenseItem dispenseBehavior = new BehaviorDefaultDispenseItem();
+
+            /**
+             * Dispense the specified stack, play the dispense sound and spawn particles.
+             */
+            protected ItemStack dispenseStack(IBlockSource source, ItemStack stack)
+            {
+                if(CarpetSettings.getBool("rotatorBlock"))
+                {
+                    return BlockRotator.dispenserRotate(source, stack);
+                }
+                else
+                {
+                    return this.dispenseBehavior.dispense(source, stack);
+                }
+            }
+        });
+    
+        // [CM] Dispensers can shear sheep
+        BlockDispenser.registerDispenseBehavior(Items.SHEARS, new Bootstrap.BehaviorDispenseOptional()
+        {
+            private final BehaviorDefaultDispenseItem dispenseBehavior = new BehaviorDefaultDispenseItem();
+        
+            protected ItemStack dispenseStack(IBlockSource blockSource, ItemStack itemStack)
+            {
+                if (CarpetSettings.getBool("dispenserSheepShearing"))
+                {
+                    World world = blockSource.getWorld();
+                    if (!world.isRemote())
+                    {
+                        this.successful = false;
+                        BlockPos blockPos = blockSource.getBlockPos().offset((EnumFacing) blockSource.getBlockState().get(BlockDispenser.FACING));
+                        List<EntitySheep> sheepList = world.getEntitiesWithinAABB(EntitySheep.class, new AxisAlignedBB(blockPos));
+                        Iterator iterator = sheepList.iterator();
+                    
+                        while (iterator.hasNext())
+                        {
+                            EntitySheep entitySheep = (EntitySheep) iterator.next();
+                            if (entitySheep.isAlive() && !entitySheep.getSheared() && !entitySheep.isChild())
+                            {
+                                entitySheep.dropItems();
+                                if (itemStack.attemptDamageItem(1, world.rand, (EntityPlayerMP) null))
+                                {
+                                    itemStack.setCount(0);
+                                }
+                            
+                                this.successful = true;
+                                break;
+                            }
+                        }
+                    }
+                    return itemStack;
+                }
+                else
+                {
+                    return this.dispenseBehavior.dispense(blockSource, itemStack);
+                }
+            }
+        });
+
         for (EnumDyeColor enumdyecolor : EnumDyeColor.values())
         {
             BlockDispenser.registerDispenseBehavior(BlockShulkerBox.getBlockByColor(enumdyecolor).asItem(), new Bootstrap.BehaviorDispenseShulkerBox());
