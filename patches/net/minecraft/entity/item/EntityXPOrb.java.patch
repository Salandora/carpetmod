--- a/net/minecraft/entity/item/EntityXPOrb.java
+++ b/net/minecraft/entity/item/EntityXPOrb.java
@@ -17,16 +17,25 @@
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
+import carpet.CarpetSettings;
+import carpet.helpers.XPcombine;
+
 public class EntityXPOrb extends Entity
 {
     public int xpColor;
     public int xpOrbAge;
     public int delayBeforeCanPickup;
+    public int delayBeforeCombine;
     private int xpOrbHealth = 5;
     private int xpValue;
     private EntityPlayer closestPlayer;
     private int xpTargetColor;
 
+    //CM
+    @Override
+    public String cm_name() { return "XP Orb"; }
+
+
     public EntityXPOrb(World worldIn, double x, double y, double z, int expValue)
     {
         super(EntityType.EXPERIENCE_ORB, worldIn);
@@ -37,8 +46,26 @@
         this.motionY = (double)((float)(Math.random() * 0.2D) * 2.0F);
         this.motionZ = (double)((float)(Math.random() * (double)0.2F - (double)0.1F) * 2.0F);
         this.xpValue = expValue;
+
+        // add combine delay [CM]
+        this.delayBeforeCombine = 50;
     }
 
+    public EntityXPOrb(World worldIn, int expValue, EntityXPOrb old)
+    {
+        super(EntityType.EXPERIENCE_ORB, worldIn);
+        this.setSize(0.5F, 0.5F);
+        this.setPosition(old.posX, old.posY, old.posZ);
+        this.rotationYaw = old.rotationYaw;
+        this.motionX = old.motionX;
+        this.motionY = old.motionY;
+        this.motionZ = old.motionZ;
+        this.xpValue = expValue;
+
+        // add combine delay [CM]
+        this.delayBeforeCombine = 50;
+    }
+
     public EntityXPOrb(World worldIn)
     {
         super(EntityType.EXPERIENCE_ORB, worldIn);
@@ -138,6 +165,21 @@
         }
 
         this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
+
+        //Adding code here for combining XP orbs. [CM]
+        if (CarpetSettings.getBool("combineXPOrbs"))
+        {
+            if (this.delayBeforeCombine > 0)
+            {
+                --this.delayBeforeCombine;
+            }
+
+            if (this.delayBeforeCombine == 0)
+            {
+                XPcombine.searchForOtherXPNearbyCarpet(this);
+            }
+        }
+
         float f = 0.98F;
 
         if (this.onGround)
@@ -218,7 +260,8 @@
     {
         if (!this.world.isRemote)
         {
-            if (this.delayBeforeCanPickup == 0 && entityIn.xpCooldown == 0)
+            // [CM] added ORed condition
+            if (this.delayBeforeCanPickup == 0 && (entityIn.xpCooldown == 0 || CarpetSettings.getBool("xpNoCooldown")))
             {
                 entityIn.xpCooldown = 2;
                 entityIn.onItemPickup(this, 1);
@@ -251,6 +294,10 @@
         return xp * 2;
     }
 
+    public void setXpValue(int xpValue)
+    {
+        this.xpValue = xpValue;
+    }
     public int getXpValue()
     {
         return this.xpValue;
